{
addRepo "http://maven.kevoree.org/daum/snapshots"


merge 'mvn:org.kevoree.microsandbox/org.kevoree.microsandbox.javasenode/{project.version}'
merge "mvn:org.kevoree.corelibrary.javase/org.kevoree.library.javase.fakeDomo/{kevoree.corelibrary.version}"
merge "mvn:org.kevoree.corelibrary.javase/org.kevoree.library.javase.swingUI/{kevoree.corelibrary.version}"

merge 'mvn:org.kevoree.corelibrary.javase/org.kevoree.library.javase.jexxus/{kevoree.corelibrary.version}'
merge 'mvn:org.kevoree.corelibrary.javase/org.kevoree.library.javase.defaultChannels/{kevoree.corelibrary.version}'

merge 'mvn:org.kevoree.microsandbox/org.kevoree.microsandbox.monitoring/{project.version}'
merge 'mvn:org.kevoree.microsandbox/org.kevoree.microsandbox.samples/{project.version}'

addNode node0:MonitoredNode {
    availability_memory='150000000',
    availability_instr='200000000'
}

addComponent RecordingComponent0@node0 : ForContractInformationRetrieverComponent {

}

addComponent ThresholdCalculator@node0 : MeasuringCPUUsage{

}

addComponent ContractCreator0@node0 : ContractCreatorComponent {
    kevs_file = '/home/inti/Desktop/setup.kevs'
}

addChannel cpu_channel : defMSG
addChannel mem_channel : defMSG
addChannel components_channel : defMSG

bind ThresholdCalculator.maximumCPU@node0 => cpu_channel
bind ContractCreator0.CPUThreshold@node0 => cpu_channel

bind ThresholdCalculator.maximumMem@node0 => mem_channel
bind ContractCreator0.MemThreshold@node0 => mem_channel

bind RecordingComponent0.output@node0 => components_channel
bind ContractCreator0.componentProcessor@node0 => components_channel

updateDictionary cpu_channel
updateDictionary mem_channel
updateDictionary components_channel

addComponent tester0@node0 : CPUConsumerByPrimalityTesting {
    cpu_wall_time='4000000',
    throughput_msg_per_second='all=8;primalityTester=8'
}

addComponent generator0@node0 : NumberGenerator {
    frequency = '20'
}

addChannel channelForNumbers : defMSG {}

bind tester0.primalityTester@node0 => channelForNumbers
bind generator0.numbers@node0 => channelForNumbers

updateDictionary channelForNumbers


addGroup sync:BasicGroup
addToGroup sync node0

}

