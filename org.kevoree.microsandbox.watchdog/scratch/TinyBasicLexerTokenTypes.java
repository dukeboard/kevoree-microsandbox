// $ANTLR 2.7.2: "TinyBasic.g" -> "TinyBasicLexer.java"$

	package tinybasic;
	import java.util.*;

public interface TinyBasicLexerTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int SLIST = 4;
	int TYPE = 5;
	int PROGRAM_DEF = 6;
	int SUBROUTINE_DEF = 7;
	int FUNCTION_DEF = 8;
	int EXIT_MODULE = 9;
	int PARAMETERS = 10;
	int PARAMETER_DEF = 11;
	int LABELED_STAT = 12;
	int NUMBERED_STAT = 13;
	int UNARY_MINUS = 14;
	int UNARY_PLUS = 15;
	int CASE_GROUP = 16;
	int ARGLIST = 17;
	int FOR_LOOP = 18;
	int FOR_FROM = 19;
	int FOR_TO = 20;
	int FOR_BY = 21;
	int FOR_BY_ONE = 22;
	int FOR_BODY = 23;
	int INT_FN_EXECUTE = 24;
	int FLT_FN_EXECUTE = 25;
	int STR_FN_EXECUTE = 26;
	int SUB_EXECUTE = 27;
	int EQ_COMP = 28;
	int INDEX_OP = 29;
	int SUBSTRING_OP = 30;
	int DOT = 31;
	int ARRAY1D = 32;
	int ARRAY2D = 33;
	int ARRAY3D = 34;
	int ARRAY1D_PROXY = 35;
	int ARRAY2D_PROXY = 36;
	int ARRAY3D_PROXY = 37;
	int VAR_PROXY = 38;
	int WHEN_ERROR_CALL = 39;
	int WHEN_ERROR_IN = 40;
	int PRINT_ASCII = 41;
	int PRINT_TAB = 42;
	int PRINT_NUMERIC = 43;
	int PRINT_STRING = 44;
	int PRINT_COMMA = 45;
	int PRINT_SEMI = 46;
	int IF_THEN_BLOCK = 47;
	int IF_BLOCK = 48;
	int ELSE_IF_BLOCK = 49;
	int ELSE_BLOCK = 50;
	int CODE_BLOCK = 51;
	int CONDITION = 52;
	int TK_program = 53;
	int TK_end = 54;
	int TK_sub = 55;
	int TK_function = 56;
	int INT_FN = 57;
	int STR_FN = 58;
	int FLT_FN = 59;
	int LPAREN = 60;
	int RPAREN = 61;
	int COMMA = 62;
	int TK_if = 63;
	int TK_then = 64;
	int TK_else = 65;
	int TK_elseif = 66;
	int TK_endif = 67;
	int TK_for = 68;
	int EQ = 69;
	int TK_to = 70;
	int TK_by = 71;
	int TK_next = 72;
	int TK_do = 73;
	int TK_until = 74;
	int TK_loop = 75;
	int TK_select = 76;
	int TK_case = 77;
	int TK_library = 78;
	int STR_CONST = 79;
	int TK_dim = 80;
	int TK_global = 81;
	int TK_beep = 82;
	int TK_chain = 83;
	int TK_with = 84;
	int TK_gosub = 85;
	int TK_goto = 86;
	int TK_return = 87;
	int TK_exit = 88;
	int TK_let = 89;
	int TK_on = 90;
	int TK_option = 91;
	int TK_base = 92;
	int INT_CONST = 93;
	int TK_out = 94;
	int TK_pause = 95;
	int TK_redim = 96;
	int TK_poke = 97;
	int TK_randomize = 98;
	int TK_call = 99;
	int IDENT = 100;
	int COLON = 101;
	int SEMI = 102;
	int TK_tab = 103;
	int TK_close = 104;
	int POUND = 105;
	int TK_data = 106;
	int TK_deletefile = 107;
	int TK_input = 108;
	int TK_binary = 109;
	int TK_open = 110;
	int TK_access = 111;
	int TK_output = 112;
	int TK_outin = 113;
	int TK_append = 114;
	int TK_organization = 115;
	int TK_sequential = 116;
	int TK_random = 117;
	int TK_stream = 118;
	int TK_recsize = 119;
	int TK_print = 120;
	int TK_read = 121;
	int TK_restore = 122;
	int TK_set = 123;
	int TK_timer = 124;
	int TK_loc = 125;
	int TK_using = 126;
	int TK_margin = 127;
	int TK_zonewidth = 128;
	int TK_address = 129;
	int TK_record = 130;
	int TK_prompt = 131;
	// "@" = 132
	int TK_brush = 133;
	int TK_circle = 134;
	int TK_clear = 135;
	int TK_metafileon = 136;
	int TK_metafileoff = 137;
	int TK_ellipse = 138;
	int MINUS = 139;
	int TK_font = 140;
	int TK_pen = 141;
	int TK_picture = 142;
	int TK_polyline = 143;
	int TK_rectangle = 144;
	int TK_screen = 145;
	int TK_normal = 146;
	int TK_condensed = 147;
	int TK_display = 148;
	int TK_zoom = 149;
	int TK_unzoom = 150;
	int TK_close_basic = 151;
	int TK_line = 152;
	int TK_enter = 153;
	int TK_cause = 154;
	int TK_error = 155;
	int TK_event = 156;
	int TK_disable = 157;
	int TK_enable = 158;
	int TK_srq = 159;
	int TK_gpib = 160;
	int TK_discard = 161;
	int TK_abort = 162;
	int TK_retry = 163;
	int TK_continue = 164;
	int TK_stop = 165;
	int TK_when = 166;
	int TK_in = 167;
	int TK_use = 168;
	int TK_endwhen = 169;
	int LBRACK = 170;
	int RBRACK = 171;
	int STR_VAR = 172;
	int INT_VAR = 173;
	int FLT_VAR = 174;
	int TK_xor = 175;
	int TK_or = 176;
	int TK_and = 177;
	int TK_not = 178;
	int LT = 179;
	int GT = 180;
	int LE = 181;
	int GE = 182;
	int NE_COMP = 183;
	int TK_abs = 184;
	int TK_acos = 185;
	int TK_asc = 186;
	int TK_atn = 187;
	int TK_cos = 188;
	int TK_dround = 189;
	int TK_errl = 190;
	int TK_errn = 191;
	int TK_exp = 192;
	int TK_fract = 193;
	int TK_get_event = 194;
	int TK_instr = 195;
	int TK_int = 196;
	int TK_ival = 197;
	int TK_len = 198;
	int TK_lgt = 199;
	int TK_log = 200;
	int TK_max = 201;
	int TK_min = 202;
	int TK_peek = 203;
	int TK_pi = 204;
	int TK_rnd = 205;
	int TK_sgn = 206;
	int TK_signed = 207;
	int TK_sin = 208;
	int TK_sqr = 209;
	int TK_tan = 210;
	int TK_time = 211;
	int TK_ubound = 212;
	int TK_val = 213;
	int TK_andb = 214;
	int TK_orb = 215;
	int TK_notb = 216;
	int TK_shiftb = 217;
	int TK_xorb = 218;
	// "chr$" = 219
	// "date$" = 220
	// "dround$" = 221
	// "errl$" = 222
	// "errn$" = 223
	// "inchr$" = 224
	// "ival$" = 225
	// "lwc$" = 226
	// "rpt$" = 227
	// "time$" = 228
	// "upc$" = 229
	// "val$" = 230
	int PLUS = 231;
	int STAR = 232;
	int TK_div = 233;
	int TK_mod = 234;
	int SLASH = 235;
	int EXPO = 236;
	int FLT_CONST = 237;
	int AMPERSAND = 238;
	int BINARY_INTEGER = 239;
	int OCTAL_INTEGER = 240;
	int HEXADECIMAL_INTEGER = 241;
	int EOL = 242;
	int WS = 243;
	int SL_COMMENT = 244;
	int CHAR_LITERAL = 245;
	int ESCc = 246;
	int ESCs = 247;
	int ESCqs = 248;
	int HEX_DIGIT = 249;
	int VOCAB = 250;
	int EXPONENT = 251;
	int FLT_SUFFIX = 252;
}
