// $ANTLR 2.7.2: "idl.g" -> "IDLLexer.java"$
 
  import java.io.*;
  import java.util.Vector;
  import java.util.Hashtable;
 
public interface IDLTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int SEMI = 4;
	int TK_module = 5;
	int LCURLY = 6;
	int RCURLY = 7;
	int TK_interface = 8;
	int COLON = 9;
	int COMMA = 10;
	int SCOPEOP = 11;
	int TK_const = 12;
	int ASSIGN = 13;
	int OR = 14;
	int XOR = 15;
	int AND = 16;
	int LSHIFT = 17;
	int RSHIFT = 18;
	int PLUS = 19;
	int MINUS = 20;
	int STAR = 21;
	int DIV = 22;
	int MOD = 23;
	int TILDE = 24;
	int LPAREN = 25;
	int RPAREN = 26;
	int TK_TRUE = 27;
	int TK_FALSE = 28;
	int TK_typedef = 29;
	int TK_native = 30;
	int TK_octet = 31;
	int TK_any = 32;
	int TK_unsigned = 33;
	int TK_short = 34;
	int TK_long = 35;
	int TK_char = 36;
	int TK_float = 37;
	int TK_double = 38;
	int TK_boolean = 39;
	int TK_struct = 40;
	int TK_union = 41;
	int TK_switch = 42;
	int TK_case = 43;
	int TK_default = 44;
	int TK_enum = 45;
	int TK_sequence = 46;
	int LT = 47;
	int GT = 48;
	int TK_string = 49;
	int LBRACK = 50;
	int RBRACK = 51;
	int TK_readonly = 52;
	int TK_attribute = 53;
	int TK_exception = 54;
	int TK_oneway = 55;
	int TK_void = 56;
	int TK_in = 57;
	int TK_out = 58;
	int TK_inout = 59;
	int TK_raises = 60;
	int TK_context = 61;
	int INT = 62;
	int OCTAL = 63;
	int HEX = 64;
	int STRING_LITERAL = 65;
	int CHAR_LITERAL = 66;
	int FLOAT = 67;
	int IDENT = 68;
	int QUESTION = 69;
	int DOT = 70;
	int NOT = 71;
	int WS = 72;
	int PREPROC_DIRECTIVE = 73;
	int SL_COMMENT = 74;
	int ML_COMMENT = 75;
	int ESC = 76;
	int VOCAB = 77;
	int DIGIT = 78;
	int OCTDIGIT = 79;
	int HEXDIGIT = 80;
}
