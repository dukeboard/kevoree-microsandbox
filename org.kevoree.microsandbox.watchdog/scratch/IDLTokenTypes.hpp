#ifndef INC_IDLTokenTypes_hpp_
#define INC_IDLTokenTypes_hpp_

/* $ANTLR 2.7.2: "idl.g" -> "IDLTokenTypes.hpp"$ */
struct IDLTokenTypes {
	enum {
		EOF_ = 1,
		SEMI = 4,
		TK_module = 5,
		LCURLY = 6,
		RCURLY = 7,
		TK_interface = 8,
		COLON = 9,
		COMMA = 10,
		SCOPEOP = 11,
		TK_const = 12,
		ASSIGN = 13,
		OR = 14,
		XOR = 15,
		AND = 16,
		LSHIFT = 17,
		RSHIFT = 18,
		PLUS = 19,
		MINUS = 20,
		STAR = 21,
		DIV = 22,
		MOD = 23,
		TILDE = 24,
		LPAREN = 25,
		RPAREN = 26,
		TK_TRUE = 27,
		TK_FALSE = 28,
		TK_typedef = 29,
		TK_native = 30,
		TK_octet = 31,
		TK_any = 32,
		TK_unsigned = 33,
		TK_short = 34,
		TK_long = 35,
		TK_char = 36,
		TK_float = 37,
		TK_double = 38,
		TK_boolean = 39,
		TK_struct = 40,
		TK_union = 41,
		TK_switch = 42,
		TK_case = 43,
		TK_default = 44,
		TK_enum = 45,
		TK_sequence = 46,
		LT_ = 47,
		GT = 48,
		TK_string = 49,
		LBRACK = 50,
		RBRACK = 51,
		TK_readonly = 52,
		TK_attribute = 53,
		TK_exception = 54,
		TK_oneway = 55,
		TK_void = 56,
		TK_in = 57,
		TK_out = 58,
		TK_inout = 59,
		TK_raises = 60,
		TK_context = 61,
		INT = 62,
		OCTAL = 63,
		HEX = 64,
		STRING_LITERAL = 65,
		CHAR_LITERAL = 66,
		FLOAT = 67,
		IDENT = 68,
		QUESTION = 69,
		DOT = 70,
		NOT = 71,
		WS_ = 72,
		PREPROC_DIRECTIVE = 73,
		SL_COMMENT = 74,
		ML_COMMENT = 75,
		ESC = 76,
		VOCAB = 77,
		DIGIT = 78,
		OCTDIGIT = 79,
		HEXDIGIT = 80,
		NULL_TREE_LOOKAHEAD = 3
	};
};
#endif /*INC_IDLTokenTypes_hpp_*/
