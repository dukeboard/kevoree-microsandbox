
<div1 id="model"><head>The XForms Model</head> 

<div2 id="model-intro"><head>Introduction</head>
<p>Chapter <specref ref="datatypes"/> described how XForms uses the XML Schema datatyping system, which can constrain the <termref def="def-value-space">value space</termref> of datatypes that can be used in data collection. This chapter introduces a different set of properties, called <termref def="def-model-item-property">model item properties</termref>, which define XForms-specific behaviors and metadata useful for data collection.</p>
</div2>

<div2 id="model-prop"><head>Model Item Properties</head>

<p>Model item properties fall into two basic categories:</p><ulist><item><p><termref def="def-computed-expression">Computed expressions</termref> are XPath expressions that provide a value to the XForms Processor. The value is recomputed at certain times, according to the XForms Processing Model (see <specref ref="rpm"/>).</p></item><item><p>All other properties are fixed, static values that the XForms Processor evaluates only once.</p></item></ulist>
  
<p>The following properties are available for all <termref def="def-model-item">model items</termref>,
  and their syntax is explained throughout this chapter. For each property the following information is provided:</p><slist><sitem>Description</sitem><sitem>Computed Expression (yes or no)</sitem><sitem>Legal Values</sitem><sitem>Default Value</sitem><sitem>Additional descriptive text</sitem></slist><div3 id="model-prop-name"><head>name</head>
<p>Description: provides a specific name for the model item.</p>
<p>Computed Expression: No</p><p>Legal Values: only values of type <code>xsd:NCName</code></p>
<p>Default Value: none.</p>
<p>Authors can associate a human-readable name with a model item through 
  the use of the <code>name</code> property. Each <code>name</code> should be 
  unique within the scope of the XForms Model where it is declared.</p>

</div3>

<div3 id="model-prop-type"><head>type</head><p>Description: assigns a Schema datatype.</p><p>Computed Expression: No</p><p>Legal Values: any <code>xsd:QName</code> representing a Schema datatype.</p><p>Default Value: <code>xsd:anyType</code></p><p>The concept of typed data is important to forms. The assignment of a particular datatype to a model item affects validation of the data it can accept, as well as affecting which form controls to which it can bind.</p><note><p>The XForms Model uses properties "name" and "type"
as in XML Schema;
the concrete syntax used to define XForm Models, and
consequently the use of these properties  will be
made concrete in a forthcoming revision of this Working Draft.
</p></note></div3><div3 id="model-prop-readOnly"><head>readOnly</head>
<p>Description: describes whether the value is restricted from changing. 
  The ability of form controls to have focus and appear in the navigation order is unaffected 
  by this property.</p><p>Computed Expression: Yes</p>
<p>Legal Values: any expression is convertible to <code>boolean</code>.</p>
<p>Default Value: <code>false</code>.</p>
<p>When evaluating to <code>true</code>, this property indicates that the XForms Processor should not allow any changes to the bound instance data item.</p><p>In addition to restricting value changes, the <code>readOnly</code> property 
  provides a hint to the XForms User Interface. Form controls 
  bound to a model item with the <code>readOnly</code> 
  property should indicate that entering or changing the value is not allowed. 
  The hint provided has no effect on visibility, focus, or navigation order.</p>
</div3>

<div3 id="model-prop-required"><head>required</head>
<p>Description: describes whether a value is required before the instance 
  data is submitted.</p><p>Computed Expression: Yes</p>
<p>Legal Values: any expression that is convertible to <code>boolean</code></p>
<p>Default Value: <code>false</code>.</p>
<p>Often forms require certain values to be entered. This may be 
  a static requirement, or may only be the case if some condition is satisfied. When evaluating to <code>true</code>, this property indicates that a non-empty instance data item is required before a submission of instance data can occur. Non-empty is defined as:</p><olist><item><p>If the bound instance data item is the text content of an element, the element  must not have the <att>xsi:nil</att> attribute set to <code>true</code>.</p></item><item><p>The bound instance data item must be convertible to an XPath <code>string</code> with a length greater than zero.</p></item></olist>
<p>Except as noted below, the <code>required</code> property does not provide 
  a hint to the XForms User Interface regarding visibility, focus, or navigation order.
  XForms authors are strongly encouraged to make sure that form controls that
  accept <code>required</code> data are visible. An XForms Processor may provide a
  unique indication that a form control is required, and may provide immediate feedback, including limiting navigation, for required form controls.</p>

<issue id="issue-default-default"><p>It might be useful to set the default for the
required attribute for an entire XForms Model. What should the default default be?
How could we assign a default for a single XForms Model? This could apply to other
attributes as well, e.g. readOnly, etc...</p></issue>
<p>The chapter <specref ref="rpm"/> contains details on how the XForms Processor enforces required values.</p></div3>

<div3 id="model-prop-rel